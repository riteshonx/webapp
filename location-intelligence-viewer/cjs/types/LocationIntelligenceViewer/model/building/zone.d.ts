import { Box3, ColorRepresentation, Object3D, Vector3 } from 'three';
import { VisualizeFocusType } from '../../../LocationIntelligenceViewerV2/engine/internal/enum/visualizeFocusType';
import { FocusableObject } from '../../../Viewer/models/focusableObject';
import { LocalFocusableObject } from '../../../Viewer/models/localFocusableObject';
import { IZone } from '../../interfaces/IZone';
import { HighlightOptions } from '../../utils/highlightOptions';
import { SmartLevel, SmartZone } from '../external/smart';
import { Boundary } from '../gltf/boundary';
import { Building } from './building';
import { Level } from './level';
import { Room } from './room';
export declare class Zone extends Object3D implements LocalFocusableObject {
    focusableType: VisualizeFocusType.LOCAL;
    name: string;
    rooms: Room[];
    zones: Zone[];
    isActive: Boolean;
    nodeType: 'Zone';
    parentBuilding: Building;
    parentLevel: Level;
    parentZone: Zone;
    private boundingBox;
    private nodeDepth;
    private isVisisbleInScene;
    externalReferenceId: string;
    constructor(zone: IZone, boundaries: Map<string, Boundary>, floor: number, floorCenter: Vector3, parentBuilding: Building, parentLevel: Level, parentZone: Zone, nodeDepth: number);
    get isValid(): boolean;
    get parentZoneOrLevel(): Zone | Level;
    private setBoundingBox;
    get boundingVolume(): Box3;
    get center(): Vector3;
    get size(): Vector3;
    get cameraFocusPoint(): Vector3;
    get maximumBoundingDimension(): number;
    get intermediateCoordinate(): import("../map/coordinate").Coordinate;
    get boundingDimensions(): Box3;
    highlight(color?: ColorRepresentation, options?: HighlightOptions): void;
    unHighlight(removeHighlightPersistance?: boolean): void;
    setInteractable(interactable: boolean): void;
    onAddToWorld(): void;
    onRemoveFromWorld(): void;
    asSmartZone(parent: SmartLevel | SmartZone, parentLevel: SmartLevel, focusOn: (focusableObject: FocusableObject) => Promise<void>): SmartZone;
    findNodeById(nodeId: number): Zone | Room;
}
