import { Action } from "../../../../models/context";
import { DISABLE_CATEGORY_TAB, DISABLE_SHEETS_TAB, DRAWING_CATEGORY_DETAILS, 
        DRAWING_LIB_DETAILS, DRAWING_SHEETS_DETAILS, 
        DRAWING_VERSION_DETAILS, 
        IS_AUTO_UPDATE, 
        IS_PUBLISH_DISABLED, 
        PARSED_FILE_URL,
        IS_VERSION_INVALID,
        IS_UPLOAD_OPEN,
        PUBLISHED_DRAWING_LIST,
        INVALID_VERSION_NAME,
        INVALID_VERSION_DATE,
        DRAWING_PAGE_NUMBER,
        DRAWING_VIEWER_URL,
        DRAWING_SHEET_LIST,
        DRAWING_LISTS,
        FILTER_DRAWING_LISTS,
        DRAWING_VIEW,
        CLOSE_CONFIRM_BOX,
        DRAWING_VERSION_LISTS,
        DRAWING_ANNOTATION_LISTS,
        SELECTED_FILTER_DATA,
        IS_FILTER_ON,
        LAST_AUTOGENERATED_NUMBER,
        TEMPLATE_FIELDS,
        TEMPLATE_FIELD_FORMAT,
        LOCAL_SPLITTED_NUMBER,
        COLLABORATION_ENABLED,
        DRAWING_LIST_PAGE_NUMBER,
        DRAWING_SESSION_NUMBER,
        ACTIVE_SESSION_USERS,
        SESSION_CREATED,
        IS_LOADING_SESSION,
        SORT_COLUMN_PROPERTY,
        DRAWING_NUMBER_LISTS
    } from "./DrawingLibDetailsAction";

export const DrawingLibDetailsInitialState = {
    drawingLibDetails: [],
    drawingVersionDetails: null,
    drawingCategoryDetails: null,
    drawingSheetsDetails: null,
    categoryTabStatus: true,
    sheetsTabStatus: true,
    parsedFileUrl: null,
    isAutoUpdate: false,
    isPublishDisabled: true,
    isVersionInValid: true,
    isUploadFileZoneOpen: false,
    publishedDrawingLists : [],
    isInvalidVersionName: false,
    isInvalidVersionDate: false,
    drawingPageNum: 1,
    drawingViewerFileUrl: null,
    drawingSheetLists : [],
    drawingsLists: [],
    filterDrawingsLists: [],
    drawingView : 'list',
    isConfirmOpen: false,
    drawingVersionLists: [],
    drawingAnnotationLists: [],
    selectedFilterData: {
        versionName: [],
        versionDate: [],
        // versionStartDate: null,
        // versionEndDate: null,
        drawingCategories: [],
        drawingRevision: []
    },
    isFilterOn: false,
    autogenNum: 0,
    drawingTemplateFields: null,
    drawingTemplateFieldFormat: null,
    localSplittedNumber: null,
    collaborationEnabled: false,
    drawingListPageNumber: 0,
    drawingSessionId: '',
    activeSessionUsers: [],
    sessionCreated: false,
    isLoadingSession: true,
    sortColumnProperty: 'drawingNumber',
    drawingNumberLists:[]
}

export const DrawingLibDetailsReducer = (state: any = DrawingLibDetailsInitialState, action: Action): any => {
    switch(action.type){
        case DRAWING_LIB_DETAILS:{
            return {
                ...state,
                drawingLibDetails: action.payload
            }
        }
        case DRAWING_VERSION_DETAILS:{
            return {
                ...state,
                drawingVersionDetails: action.payload
            }
        }
        case DRAWING_CATEGORY_DETAILS:{
            return {
                ...state,
                drawingCategoryDetails: action.payload
            }
        }
        case DRAWING_SHEETS_DETAILS:{
            return {
                ...state,
                drawingSheetsDetails: action.payload
            }
        }
        case DISABLE_CATEGORY_TAB:{
            return {
                ...state,
                categoryTabStatus: action.payload
            }
        }
        case DISABLE_SHEETS_TAB:{
            return {
                ...state,
                sheetsTabStatus: action.payload
            }
        }
        case PARSED_FILE_URL:{
            return {
                ...state,
                parsedFileUrl: action.payload
            }
        }
        case IS_AUTO_UPDATE:{
            return {
                ...state,
                isAutoUpdate: action.payload
            }
        }
        case IS_PUBLISH_DISABLED:{
            return {
                ...state,
                isPublishDisabled: action.payload
            }
        }
        case IS_VERSION_INVALID:{
            return {
                ...state,
                isVersionInValid: action.payload
            }
        }
        case IS_UPLOAD_OPEN:{
            return {
                ...state,
                isUploadFileZoneOpen: action.payload
            }
        }
        case PUBLISHED_DRAWING_LIST:{
            return {
                ...state,
                publishedDrawingLists: action.payload
            }
        }
        case INVALID_VERSION_NAME:{
            return {
                ...state,
                isInvalidVersionName: action.payload
            }
        }
        case INVALID_VERSION_DATE:{
            return {
                ...state,
                isInvalidVersionDate: action.payload
            }
        }
        case DRAWING_PAGE_NUMBER:{
            return {
                ...state,
                drawingPageNum: action.payload
            }
        }
        case DRAWING_VIEWER_URL:{
            return {
                ...state,
                drawingViewerFileUrl: action.payload
            }
        }
        case DRAWING_SHEET_LIST:{
            return {
                ...state,
                drawingSheetLists: action.payload
            }
        }
        case DRAWING_LISTS:{
            return {
                ...state,
                drawingsLists: action.payload
            }
        }
        case FILTER_DRAWING_LISTS:{
            return {
                ...state,
                filterDrawingsLists: action.payload
            }
        }
        case DRAWING_VIEW:{
            return {
                ...state,
                drawingView: action.payload
            }
        }
        case CLOSE_CONFIRM_BOX:{
            return {
                ...state,
                isConfirmOpen: action.payload
            }
        }
        case DRAWING_VERSION_LISTS:{
            return {
                ...state,
                drawingVersionLists: action.payload
            }
        }
        case DRAWING_ANNOTATION_LISTS:{
            return {
                ...state,
                drawingAnnotationLists: action.payload
            }
        }
        case SELECTED_FILTER_DATA:{
            return {
                ...state,
                selectedFilterData: action.payload
            }
        }
        case IS_FILTER_ON:{
            return {
                ...state,
                isFilterOn: action.payload
            }
        }
        case LAST_AUTOGENERATED_NUMBER:{
            return {
                ...state,
                autogenNum: action.payload
            }
        }
        case TEMPLATE_FIELDS:{
            return {
                ...state,
                drawingTemplateFields: action.payload
            }
        }
        case TEMPLATE_FIELD_FORMAT:{
            return {
                ...state,
                drawingTemplateFieldFormat: action.payload
            }
        }
        case LOCAL_SPLITTED_NUMBER:{
            return {
                ...state,
                localSplittedNumber: action.payload
            }
        }
        case COLLABORATION_ENABLED:{
            return{
                ...state,
                collaborationEnabled: action.payload
            }
        }
        case DRAWING_LIST_PAGE_NUMBER:{
            return{
                ...state,
                drawingListPageNumber: action.payload
            }
        }
        case DRAWING_SESSION_NUMBER:{
            return{
                ...state,
                drawingSessionId: action.payload
            }
        }
        case ACTIVE_SESSION_USERS:{
            return{
                ...state,
                activeSessionUsers: action.payload
            }
        }
        case SESSION_CREATED:{
            return{
                ...state,
                sessionCreated: action.payload
            }
        }
        case IS_LOADING_SESSION:{
            return{
                ...state,
                isLoadingSession: action.payload
            }
        }
        case SORT_COLUMN_PROPERTY:{
            return{
                ...state,
                sortColumnProperty:action.payload 
            }
        }
        case DRAWING_NUMBER_LISTS:{
            return{
                ...state,
                drawingNumberLists:action.payload
            }
        }
        default: return state
    }
}