import { gql } from "@apollo/client";
import {
  FormTemplateDetailsModel,
  FormTemplateModel,
  FormStatusModel,
} from "../models/dataModels";



// to fetch the form field without autoGenerated

export const FETCH_FORM_TEMPLATE_VIEW = gql`query getViewFormTemplate($featureId: Int!,$versionId: Int) {
  projectTemplateAssociation(where: {formTemplate: {featureId: {_eq: $featureId}}}) {
    ${FormTemplateModel.workflowEnabled}
    ${FormTemplateModel.formTemplate} {
      ${FormTemplateModel.formTemplateVersions}(where: {id: {_eq: $versionId}}) {
        ${FormTemplateModel.formTemplateFieldData} {
          ${FormTemplateModel.selector.caption}
          ${FormTemplateModel.selector.configListId}
          ${FormTemplateModel.selector.elementId}
          ${FormTemplateModel.selector.fieldTypeId}
          ${FormTemplateModel.selector.fixed}
          ${FormTemplateModel.selector.required}
          ${FormTemplateModel.selector.sequence}
          ${FormTemplateModel.selector.width}
          ${FormTemplateModel.selector.filterable}
          ${FormTemplateModel.selector.metadata}
          ${FormTemplateModel.selector.tableId}
          ${FormTemplateModel.selector.metadata}
        }
        ${FormTemplateModel.selector.id}
        ${FormTemplateModel.selector.version}
      }
    }
  }
 }
`;


// to fetch a rfi details
export const FETCH_FORM_TEMPLATE_DETAILS = gql` query getFormDetails ( $formId: Int!) {
    ${FormTemplateDetailsModel.modelName}(formId: $formId) {
      ${FormTemplateDetailsModel.selector.formState}
      ${FormTemplateDetailsModel.selector.formsData}
      ${FormTemplateDetailsModel.selector.workflowData}
      ${FormTemplateDetailsModel.selector.id}
      ${FormTemplateDetailsModel.selector.templateVersionId}
      ${FormTemplateDetailsModel.selector.blockedByCounter}
      ${FormTemplateDetailsModel.selector.specificationId}
      ${FormTemplateDetailsModel.selector.submittalId}

    }
  }
`;


// to fetch a template column config
export const FETCH_TEMPLATE_COLUMN_CONFIG = gql`
  query getTemplateColumnConfig($featureId: Int!) {
    formTemplates(where: { featureId: { _eq: $featureId } }) {
      templateColumnConfigurations {
        elementId
        fixed
        sequence
        templateId
      }
    }
  }
`;

export const LOAD_FILTERS_LIST_FORM = gql`
  query getFilterListForms(
    $featureId: Int!
    $filterData: [json]
    $limit: Int!
    $offset: Int!
    $order: String!
    $orderBy: String!
  ) {
    listForms_query(
      featureId: $featureId
      filterData: $filterData
      workflowStep: true
      limit: $limit
      offset: $offset
      orderBy: { column: $orderBy, order: $order }
    ) {
      count
      data {
        formsData
        formState
        id
        specificationId
        submittalId
        blockedByCounter
        workflowData
      }
    }
  }
`;

